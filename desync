-- ServerDesyncVisualizer (single script with distance label + transparency)
-- Put in StarterPlayer > StarterPlayerScripts

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- CONFIG
local EVENT_NAME = "ServerPosVisualizerEvent"
local UPDATE_RATE = 0.12
local SMOOTHING = true
local LERP_ALPHA = 0.45
local GHOST_TRANSPARENCY = 0.7 -- pretty transparent

-- Ensure RemoteEvent exists
local remote = ReplicatedStorage:FindFirstChild(EVENT_NAME)
if not remote then
    remote = Instance.new("RemoteEvent")
    remote.Name = EVENT_NAME
    remote.Parent = ReplicatedStorage
end

-- Inject server broadcaster (runs once on server)
if RunService:IsClient() then
    if not ReplicatedStorage:FindFirstChild("ServerPosBroadcasterInserted") then
        local marker = Instance.new("BoolValue")
        marker.Name = "ServerPosBroadcasterInserted"
        marker.Parent = ReplicatedStorage

        local serverScript = Instance.new("Script")
        serverScript.Name = "ServerPosBroadcaster"
        serverScript.Source = [[
            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local Players = game:GetService("Players")

            local remote = ReplicatedStorage:WaitForChild("]]..EVENT_NAME..[[")

            local RATE = ]]..tostring(UPDATE_RATE)..[[

            Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function(char)
                    local hrp = char:WaitForChild("HumanoidRootPart", 5)
                    if not hrp then return end
                    local alive = true
                    player.AncestryChanged:Connect(function()
                        if not player:IsDescendantOf(game) then
                            alive = false
                        end
                    end)
                    task.spawn(function()
                        while alive and player.Parent do
                            if hrp and hrp.Parent then
                                remote:FireClient(player, hrp.CFrame)
                            end
                            task.wait(RATE)
                        end
                    end)
                end)
            end)
        ]]
        serverScript.Parent = game:GetService("ServerScriptService")
    end
end

-- LOCAL GHOST VISUALIZER
local ghostModel
local targetCFrame
local distanceLabel

local function createDistanceLabel(parentPart)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "DistanceLabel"
    billboard.Adornee = parentPart
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true

    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(1, 0, 1, 0)
    text.BackgroundTransparency = 1
    text.TextColor3 = Color3.fromRGB(255, 255, 255)
    text.TextStrokeTransparency = 0.2
    text.TextScaled = true
    text.Font = Enum.Font.SourceSansBold
    text.Text = "0 studs"
    text.Parent = billboard

    distanceLabel = text
    billboard.Parent = parentPart
end

local function makeGhostFromCharacter(char)
    if ghostModel then
        ghostModel:Destroy()
        ghostModel = nil
    end
    if not char then return end

    local clone = char:Clone()
    clone.Name = player.Name .. "_ServerGhost"
    clone.Parent = workspace

    -- Strip scripts and adjust appearance
    for _, d in ipairs(clone:GetDescendants()) do
        if d:IsA("Script") or d:IsA("LocalScript") then
            d:Destroy()
        elseif d:IsA("BasePart") then
            d.CanCollide = false
            d.CastShadow = false
            d.Transparency = math.clamp((d.Transparency or 0) + GHOST_TRANSPARENCY, 0, 1)
        elseif d:IsA("Humanoid") then
            d.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
            d.PlatformStand = true
        end
    end

    if not clone.PrimaryPart then
        local hrp = clone:FindFirstChild("HumanoidRootPart") or clone:FindFirstChild("Torso")
        if hrp then clone.PrimaryPart = hrp end
    end

    ghostModel = clone

    if ghostModel.PrimaryPart then
        createDistanceLabel(ghostModel.PrimaryPart)
    end
end

player.CharacterAdded:Connect(function(char)
    task.wait(0.1)
    makeGhostFromCharacter(char)
end)

if player.Character then
    makeGhostFromCharacter(player.Character)
end

-- Receive server authoritative positions
remote.OnClientEvent:Connect(function(serverCFrame)
    targetCFrame = serverCFrame
    if not ghostModel or not ghostModel.Parent then
        if player.Character then
            makeGhostFromCharacter(player.Character)
        end
    end
end)

-- Update loop
RunService.RenderStepped:Connect(function()
    if ghostModel and ghostModel.PrimaryPart and targetCFrame then
        if SMOOTHING then
            local current = ghostModel:GetPrimaryPartCFrame()
            ghostModel:SetPrimaryPartCFrame(current:Lerp(targetCFrame, LERP_ALPHA))
        else
            ghostModel:SetPrimaryPartCFrame(targetCFrame)
        end

        -- Update distance label
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local distance = (char.HumanoidRootPart.Position - ghostModel.PrimaryPart.Position).Magnitude
            if distanceLabel then
                distanceLabel.Text = string.format("%.1f studs", distance)
            end
        end
    end
end)
