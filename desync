-- Desync Visualizer (exact server position, dev-use only)
-- Run with loadstring in Studio test

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- RemoteEvent setup
local EVENT_NAME = "ServerDesyncVisualizerEvent"
local remote = ReplicatedStorage:FindFirstChild(EVENT_NAME)
if not remote then
	remote = Instance.new("RemoteEvent")
	remote.Name = EVENT_NAME
	remote.Parent = ReplicatedStorage
end

-- Inject server broadcaster if not already there
if RunService:IsClient() and not ReplicatedStorage:FindFirstChild("ServerBroadcasterFlag") then
	local flag = Instance.new("BoolValue")
	flag.Name = "ServerBroadcasterFlag"
	flag.Parent = ReplicatedStorage

	local scriptServer = Instance.new("Script")
	scriptServer.Source = [[
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local Players = game:GetService("Players")
		local remote = ReplicatedStorage:WaitForChild("]]..EVENT_NAME..[[")

		Players.PlayerAdded:Connect(function(plr)
			plr.CharacterAdded:Connect(function(char)
				local hrp = char:WaitForChild("HumanoidRootPart")
				while char.Parent do
					if hrp and hrp.Parent then
						remote:FireClient(plr, hrp.CFrame)
					end
					task.wait(0.1)
				end
			end)
		end)
	]]
	scriptServer.Parent = game:GetService("ServerScriptService")
end

-- Local ghost setup
local ghost, textLabel

local function makeGhost(char)
	if ghost then ghost:Destroy() end
	local clone = char:Clone()
	clone.Name = player.Name .. "_ServerGhost"
	clone.Parent = workspace
	for _, d in ipairs(clone:GetDescendants()) do
		if d:IsA("Script") or d:IsA("LocalScript") then
			d:Destroy()
		elseif d:IsA("BasePart") then
			d.CanCollide = false
			d.CastShadow = false
			d.Transparency = 0.8
		end
	end
	clone.PrimaryPart = clone:FindFirstChild("HumanoidRootPart")
	ghost = clone

	-- Billboard distance label
	local billboard = Instance.new("BillboardGui")
	billboard.Adornee = ghost.PrimaryPart
	billboard.Size = UDim2.new(0, 200, 0, 50)
	billboard.StudsOffset = Vector3.new(0, 3, 0)
	billboard.AlwaysOnTop = true

	local text = Instance.new("TextLabel")
	text.Size = UDim2.new(1, 0, 1, 0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.fromRGB(255, 255, 255)
	text.TextStrokeTransparency = 0.2
	text.TextScaled = true
	text.Font = Enum.Font.SourceSansBold
	text.Text = "0 studs"
	text.Parent = billboard
	billboard.Parent = ghost.PrimaryPart

	textLabel = text
end

player.CharacterAdded:Connect(makeGhost)
if player.Character then makeGhost(player.Character) end

-- Update ghost when server tells us
remote.OnClientEvent:Connect(function(serverCFrame)
	if ghost and ghost.PrimaryPart then
		ghost:SetPrimaryPartCFrame(serverCFrame)

		-- Update distance label
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if hrp and textLabel then
			local dist = (hrp.Position - ghost.PrimaryPart.Position).Magnitude
			textLabel.Text = string.format("%.1f studs", dist)
		end
	end
end)
