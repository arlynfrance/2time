-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

-- Player
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Settings
local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli", "Slasher" }
local MAX_DISTANCE = 8
local OFFSET_BEHIND = 3 -- studs behind
local SMOOTHNESS = 0.15 -- 0-1, higher is faster

-- State
local enabled = false
local mode = "Behind" -- "Behind" or "Around"
local matchFacing = true -- optional facing alignment

-- Key toggle (T)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.T then
        enabled = not enabled
    end
end)

-- Helper: Find nearest killer within distance
local function getNearestKiller()
    local nearest = nil
    local nearestDistance = math.huge

    for _, p in pairs(Players:GetPlayers()) do
        if table.find(killerNames, p.Name) and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = p.Character.HumanoidRootPart
            local dist = (targetHRP.Position - hrp.Position).Magnitude
            if dist < nearestDistance and dist <= MAX_DISTANCE then
                nearestDistance = dist
                nearest = p.Character
            end
        end
    end

    return nearest
end

-- Helper: Compute target position
local function getTargetPosition(targetHRP)
    if mode == "Behind" then
        return targetHRP.Position - (targetHRP.CFrame.LookVector * OFFSET_BEHIND)
    elseif mode == "Around" then
        local rightVec = targetHRP.CFrame.RightVector
        return targetHRP.Position + rightVec * OFFSET_BEHIND
    end
    return targetHRP.Position
end

-- Main update loop
RunService.RenderStepped:Connect(function()
    if not enabled then return end

    local target = getNearestKiller()
    if not target then return end
    local targetHRP = target:FindFirstChild("HumanoidRootPart")
    if not targetHRP then return end

    -- Compute desired position
    local targetPos = getTargetPosition(targetHRP)
    local lookAt = matchFacing and targetHRP.Position or targetPos + (targetHRP.Position - targetPos).Unit

    -- Smooth lerp
    hrp.CFrame = hrp.CFrame:Lerp(CFrame.new(targetPos, lookAt), SMOOTHNESS)
end)
